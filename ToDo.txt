--- MAJOR BUG ---
It seems like the stack/card->USe issues only exist AFTER their is an attempt to double garbage collect enemy widgets. I'm not sure how they're related but I should fix the widget double
freeing issue first 

















TODO
1. BasicEnemy Feedback
 - Lazer charge up upon seeing player
 - EnemyFlinch 
 - Make each enemy an NavInvoker in C++

 1. Card design & Weapon Design
 2. Enemy attack and intelligence. Must be fun to fight

 - Playtesting goes hand in hand with level design. Arena features matter more than interconnected-ness so do those first and alongside enemy and weapon design
	
 - Explicit Grammar classes don't need to exist. GameLevel Should contain all the data for a grammar and do mutation itself. THis works because the grammar is the only thing that differs between game levels
 - Change InsetFace to be a member of FFace. This may require having FFace's carry a pointer to their shape
 - Per first point, consider overhauling the accessability of the FFace and UShape to allow better control
 
 

screenshake from shooting [X] 
Blood splatter on hit [1/2]
Projectile whips
phys material based impact sounds
blood decal splatter on hit
Basic Enemy Attacks
healthbar shake from taking damage
Shotguns
Enemy Strafing
Enemy Improved Attacks
 - Experiment with projectiles
fix detection height to be able to see over chest highwalls






 
Less punishment for moviung (Accuracy)
boost
much larger testing area (multiple disjointed encounters)
multiagro









RESEARCH HOW ENGINE DOES DAMAGE

Can I read which key was pressed to toggle an input event?
 - Would be better than having many events


1. Seriously Consider removing custom collision channels. No point
2. Fix slight offset on HUD crosshairs
3. UCard::SpawnedActorCallback on Card_TEST isn't always applying damage despite always being called


Fix weapon bug that has them facing the wrong direction if they're facing the wrong direcion in the world

Understand projectile construction helpers and how to implement them

Properly Set Collision in C++ on character and weapon

Understand the different ways to bind methods

Figure out how to have the GameDamageStruct by a child of the engine damage struct





// -- Important Editor Notes -- //
All sound notifies attached to weapona animations must have follow owner set and be attached to the weapon





// -- Enemy Attack notification Design -- // 

Behavior tree task get's the enemies AttackCompleteDelegate and binds the FinishExecute method to it. it then calls that enemies attack method.
The attack method runs the animation.
the animation notifies the skeleton which in turn notifies the enemy which it is bound to.
the attack completes and the animation is free to continue to work as it peleases


BehaviorTree 
 Attack Node
  Binds "Finish Execute" to EnemyAnimInstance's "OnAttackAnimationCompleteDelegate" then starts the Enemy's attack animation through the appropriate attack method
  Attack animation triggers AttackAnimationComplete notify on the skeleton
  AnimInstance blueprint receives notification and calls Broadcasts "OnAttackAnimationCompleteDelegate"
  Behavior tree node receives FinishExecute and continues process


Each AnimInstance blueprint + skeleton must implement their own AttackDamageEvent[n]'s
Each AnimInstance must use it's "BlueprintInitializeAnimation" to set the C++ variable "EnemyCharacter" to the owner pawn of animation. I'd like to be done in C++, since it's repeated with each blueprint instance of EnemyAnimInstance
  


// -- PersistentEffect Design -- // 

StatusEffect : attached to character. Have impact on many things
 - Lifetime
 - active (poison, HoT) 
	- frequency (how often effect is enabled)


CharacterModifier : Binds to certain events within the character
 - Lifetime or number of triggers. (Maybe number of triggers is blueprint specific?)
 - reactive (responds to delegates broadcasting)


CharacterModifier & StatusEffect
  - Can be combination of both (charged shots if not fired frequently, this is GOOD idea)



KEY FEATURES
 - Lifetime
 - MaxTriggers
 - Frequency (seconds betweeen Affects)
 - AffectGameCharacter(AGameCharacter* GameCharacter) : Does it's thing. Should be implemented in blueprints
 - Init(AGameCharacter* GameCharacter);
	- Binds to the appropriate delegates. Should be `BlueprintNativeEvent` since we won't be always implementing a need for binding in each effect
	- Uses GameCharacter to set timer for lifetime.

 - OnHitEffects can bind to event in GameCharacter





// -- Possible bugs -- // 
APlayerCharacter::EquipWeapon has collision for both weapons active simultaneously.
This might be a problem if weapons ever need to collide with one another





// -- Card Ideas -- //
 A card that uses the top card in your discard pile
 
 A card that spawns an allied turret

 A card that makes you puke something up. Maybe a nasty energy drink?

 Shit or get off the pot
  : doesn't summon allie or summons better ally

 Break times over
  : spawns a few weaker enemies

 Red rez or heal is crystal defibrelator

 Switch to another weapon like a knife. Move much faster for a duration and gain resources for not being hit or hitting enemies with it. Gains resources for parrying?





 // -- World Ideas -- // 

You're the union buster
 - Shareholder

An 'Engineer' is someone who's willing to throw stuff at the wall to see what sticks

You're the LEAST qualified person in the ball pit

Nothing is OSHA approved

Crystals ACT
Goo REACTS inconsistently
spirits are always acting







